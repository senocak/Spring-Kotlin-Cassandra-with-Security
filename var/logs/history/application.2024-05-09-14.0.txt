Spring Kotlin Cassandra > [35m14:18:48.634[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:18:48.653[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 32400 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:18:48.654[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:18:49.130[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:18:49.131[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.144[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:18:49.144[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:18:49.201[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 68 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.204[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:18:49.204[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.212[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.578[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:18:49.578[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.588[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:18:49.589[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:18:49.589[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 11 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.591[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:18:49.591[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.595[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:18:49.600[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 9 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.735[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.736[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:18:49.913[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:18:49.918[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:18:49.919[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:18:49.919[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:18:49.949[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:18:49.949[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1264 ms
[0;39mSpring Kotlin Cassandra > [35m14:18:50.608[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:18:50.626[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:18:51.196[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:18:51.360[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:18:51.371[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:18:51.372[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:18:51.515[0;39m [1;31m[main][0;39m ERROR [userId: ]  [36mo.s.b.w.e.tomcat.TomcatStarter[0;39m - [34mError starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'userService' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/service/UserService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.github.senocak.skc.domain.UserRepository defined in @EnableCassandraRepositories declared on CassandraConfig: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
[0;39mSpring Kotlin Cassandra > [35m14:18:51.532[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStopping service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:18:51.535[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:257)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.535[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [lettuce-timer-3-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/java.lang.Thread.sleep(Native Method)
 app//io.netty.util.HashedWheelTimer$Worker.waitForNextTick(HashedWheelTimer.java:591)
 app//io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:487)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.535[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.535[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.535[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/java.lang.Thread.sleep(Native Method)
 app//io.netty.util.HashedWheelTimer$Worker.waitForNextTick(HashedWheelTimer.java:591)
 app//io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:487)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.536[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-admin-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:257)
 app//io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:52)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.536[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-admin-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:52)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.536[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-io-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.536[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-io-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.536[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-io-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:883)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.537[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-io-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:883)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.537[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/java.lang.Thread.sleep(Native Method)
 app//io.netty.util.HashedWheelTimer$Worker.waitForNextTick(HashedWheelTimer.java:591)
 app//io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:487)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.537[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-admin-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:257)
 app//io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:52)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.537[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-admin-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:52)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.537[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-io-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.537[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-io-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.538[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-io-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:883)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.538[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-io-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:883)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:18:51.539[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext[0;39m - [34mException encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
[0;39mSpring Kotlin Cassandra > [35m14:18:55.874[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.l.ConditionEvaluationReportLogger[0;39m - [34m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[0;39mSpring Kotlin Cassandra > [35m14:18:55.890[0;39m [1;31m[main][0;39m ERROR [userId: ]  [36mo.s.boot.SpringApplication[0;39m - [34mApplication run failed
[0;39morg.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.github.senocak.skc.SpringKotlinCassandraApplicationKt.main(SpringKotlinCassandraApplication.kt:13)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:145)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'userService' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/service/UserService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.github.senocak.skc.domain.UserRepository defined in @EnableCassandraRepositories declared on CassandraConfig: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4880)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/service/UserService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.github.senocak.skc.domain.UserRepository defined in @EnableCassandraRepositories declared on CassandraConfig: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 56 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.github.senocak.skc.domain.UserRepository defined in @EnableCassandraRepositories declared on CassandraConfig: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 70 common frames omitted
Caused by: org.springframework.data.repository.core.support.UnsupportedFragmentException: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$RepositoryValidator.validate(RepositoryFactorySupport.java:792)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.validate(RepositoryFactorySupport.java:515)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:323)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.cassandra.repository.support.CassandraRepositoryFactoryBean.afterPropertiesSet(CassandraRepositoryFactoryBean.java:72)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 81 common frames omitted
Spring Kotlin Cassandra > [35m14:21:01.577[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:21:01.594[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 32534 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:21:01.594[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:21:02.045[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:21:02.046[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.058[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:21:02.059[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:21:02.120[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 72 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.123[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:21:02.124[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.131[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.480[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:21:02.480[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.491[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:21:02.491[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:21:02.492[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 11 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.494[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:21:02.494[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.498[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:21:02.502[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 8 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.633[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.633[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:21:02.812[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:21:02.817[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:21:02.818[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:21:02.818[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:21:02.849[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:21:02.849[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1226 ms
[0;39mSpring Kotlin Cassandra > [35m14:21:03.494[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:21:03.512[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:21:03.882[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:21:04.051[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:21:04.062[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:21:04.063[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:21:04.207[0;39m [1;31m[main][0;39m ERROR [userId: ]  [36mo.s.b.w.e.tomcat.TomcatStarter[0;39m - [34mError starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'userService' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/service/UserService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.github.senocak.skc.domain.UserRepository defined in @EnableCassandraRepositories declared on CassandraConfig: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
[0;39mSpring Kotlin Cassandra > [35m14:21:04.222[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStopping service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:21:04.225[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:257)
 app//io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.225[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [lettuce-timer-3-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/java.lang.Thread.sleep(Native Method)
 app//io.netty.util.HashedWheelTimer$Worker.waitForNextTick(HashedWheelTimer.java:591)
 app//io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:487)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.225[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.225[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [lettuce-nioEventLoop-4-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.225[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/java.lang.Thread.sleep(Native Method)
 app//io.netty.util.HashedWheelTimer$Worker.waitForNextTick(HashedWheelTimer.java:591)
 app//io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:487)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.226[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-admin-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:257)
 app//io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:52)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.226[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-admin-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:52)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.228[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-io-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.228[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-io-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.228[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-io-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:883)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.228[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s0-io-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:883)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.229[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/java.lang.Thread.sleep(Native Method)
 app//io.netty.util.HashedWheelTimer$Worker.waitForNextTick(HashedWheelTimer.java:591)
 app//io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:487)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.229[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-admin-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:257)
 app//io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:52)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.229[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-admin-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 app//io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:244)
 app//io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:52)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.229[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-io-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.230[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-io-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:146)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:879)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.230[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-io-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:883)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.230[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.a.c.loader.WebappClassLoaderBase[0;39m - [34mThe web application [ROOT] appears to have started a thread named [s1-io-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/sun.nio.ch.KQueue.poll(Native Method)
 java.base@17.0.10/sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:122)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:129)
 java.base@17.0.10/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
 app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)
 app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:883)
 app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526)
 app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
 app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
[0;39mSpring Kotlin Cassandra > [35m14:21:04.232[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext[0;39m - [34mException encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
[0;39mSpring Kotlin Cassandra > [35m14:21:08.533[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.l.ConditionEvaluationReportLogger[0;39m - [34m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[0;39mSpring Kotlin Cassandra > [35m14:21:08.552[0;39m [1;31m[main][0;39m ERROR [userId: ]  [36mo.s.boot.SpringApplication[0;39m - [34mApplication run failed
[0;39morg.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.github.senocak.skc.SpringKotlinCassandraApplicationKt.main(SpringKotlinCassandraApplication.kt:13)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:145)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'userService' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/service/UserService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.github.senocak.skc.domain.UserRepository defined in @EnableCassandraRepositories declared on CassandraConfig: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4880)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService' defined in file [/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main/com/github/senocak/skc/service/UserService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.github.senocak.skc.domain.UserRepository defined in @EnableCassandraRepositories declared on CassandraConfig: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 56 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.github.senocak.skc.domain.UserRepository defined in @EnableCassandraRepositories declared on CassandraConfig: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 70 common frames omitted
Caused by: org.springframework.data.repository.core.support.UnsupportedFragmentException: Repository com.github.senocak.skc.domain.UserRepository implements org.springframework.data.repository.query.QueryByExampleExecutor but CassandraRepositoryFactory does not support Query by Example
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$RepositoryValidator.validate(RepositoryFactorySupport.java:792)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.validate(RepositoryFactorySupport.java:515)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:323)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.cassandra.repository.support.CassandraRepositoryFactoryBean.afterPropertiesSet(CassandraRepositoryFactoryBean.java:72)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 81 common frames omitted
Spring Kotlin Cassandra > [35m14:22:06.542[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:22:06.559[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 32617 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:22:06.560[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:22:06.993[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:22:06.993[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.013[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:22:07.014[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:22:07.071[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 75 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.074[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:22:07.074[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.080[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.439[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:22:07.439[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.455[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:22:07.456[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:22:07.457[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 17 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.459[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:22:07.459[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.464[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:22:07.468[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 9 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.598[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.599[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:22:07.773[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:22:07.778[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:22:07.779[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:22:07.779[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:22:07.811[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:22:07.811[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1222 ms
[0;39mSpring Kotlin Cassandra > [35m14:22:08.455[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:22:08.473[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:22:08.976[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:22:09.136[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:22:09.149[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:22:09.149[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:22:09.764[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:22:09.805[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@49a46f29, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7356ec91, org.springframework.security.web.context.SecurityContextHolderFilter@2f341732, org.springframework.security.web.header.HeaderWriterFilter@29471e3e, org.springframework.web.filter.CorsFilter@3f803fae, org.springframework.security.web.authentication.logout.LogoutFilter@34b4c82a, com.github.senocak.skc.security.JwtAuthenticationFilter@f0deba2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2940eec0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57d6f569, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@33224703, org.springframework.security.web.session.SessionManagementFilter@2c841ac4, org.springframework.security.web.access.ExceptionTranslationFilter@3459ccd9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@73136174]
[0;39mSpring Kotlin Cassandra > [35m14:22:09.849[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:22:10.169[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:22:10.175[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:22:10.190[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.79 seconds (process running for 9.917)
[0;39mSpring Kotlin Cassandra > [35m14:22:15.784[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:22:15.785[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:22:15.790[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 5 ms
[0;39mSpring Kotlin Cassandra > [35m14:22:15.936[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:22:15.949[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@40fc9ec3]
[0;39mSpring Kotlin Cassandra > [35m14:22:15.951[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@1b633193
[0;39mSpring Kotlin Cassandra > [35m14:22:16.020[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: ]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE email=?]; Cannot execute this query as it might involve data filtering and thus may have unpredictable performance. If you want to execute this query despite the performance unpredictability, use ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:22:16.045[0;39m [34m[task-2][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/auth/login]; client=[0:0:0:0:0:0:0:1]; method=[POST]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[null]; time=[224ms]
[0;39mSpring Kotlin Cassandra > [35m14:23:00.076[0;39m [34m[task-3][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:23:00, committedVirtualMemorySize=427700043776, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=958267392, totalMemorySize=17179869184, freeMemorySize=35061760, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=146.8 MB, maxMemory=4.29 GB, freeMemory=89.78 MB)
[0;39mSpring Kotlin Cassandra > [35m14:23:39.908[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:23:39.925[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 32696 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:23:39.925[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:23:40.416[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:23:40.417[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:23:40.431[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:23:40.432[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:23:40.493[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 73 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:23:40.495[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:23:40.496[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:23:40.503[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:23:40.881[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:23:40.881[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:23:40.892[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:23:40.893[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:23:40.899[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 17 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:23:40.902[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:23:40.902[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:23:40.907[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:23:40.911[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 8 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:23:41.097[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:23:41.097[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:23:41.299[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:23:41.305[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:23:41.306[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:23:41.307[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:23:41.346[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:23:41.347[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1392 ms
[0;39mSpring Kotlin Cassandra > [35m14:23:42.031[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:23:42.048[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:23:42.437[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:23:42.600[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:23:42.612[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:23:42.612[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:23:43.249[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:23:43.289[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7356ec91, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f803fae, org.springframework.security.web.context.SecurityContextHolderFilter@236a6a2a, org.springframework.security.web.header.HeaderWriterFilter@73fa97a9, org.springframework.web.filter.CorsFilter@33224703, org.springframework.security.web.authentication.logout.LogoutFilter@67e7fe73, com.github.senocak.skc.security.JwtAuthenticationFilter@1ddf9fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57d6f569, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5854e526, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5915ab69, org.springframework.security.web.session.SessionManagementFilter@26e588b7, org.springframework.security.web.access.ExceptionTranslationFilter@1147a8de, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@34e4a136]
[0;39mSpring Kotlin Cassandra > [35m14:23:43.329[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:23:43.555[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:23:43.560[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:23:43.573[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.806 seconds (process running for 9.287)
[0;39mSpring Kotlin Cassandra > [35m14:23:47.665[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:23:47.669[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:23:47.677[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 8 ms
[0;39mSpring Kotlin Cassandra > [35m14:23:47.847[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:23:47.863[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:23:47.866[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@11c37d28
[0;39mSpring Kotlin Cassandra > [35m14:23:47.959[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:23:48.167[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:23:48.168[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:23:48.168[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4fa13bd2
[0;39mSpring Kotlin Cassandra > [35m14:23:48.168[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:23:48.180[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:23:48.180[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:23:48.181[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:23:48.181[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@78a0a63a
[0;39mSpring Kotlin Cassandra > [35m14:23:48.181[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:23:48.275[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.skc.controller.AuthController[0;39m - [34mUserWrapperResponse is generated. UserWrapperResponse: com.github.senocak.skc.domain.dto.UserWrapperResponse@1f7ed199
[0;39mSpring Kotlin Cassandra > [35m14:23:48.296[0;39m [34m[task-2][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/auth/login]; client=[0:0:0:0:0:0:0:1]; method=[POST]; status=[200]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[583ms]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.950[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.951[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.952[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@5653d34
[0;39mSpring Kotlin Cassandra > [35m14:23:56.952[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.987[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.988[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.988[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@45aefdda
[0;39mSpring Kotlin Cassandra > [35m14:23:56.988[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.992[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.992[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.992[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4fe212d3
[0;39mSpring Kotlin Cassandra > [35m14:23:56.992[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:23:56.997[0;39m [34m[http-nio-8081-exec-3][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:23:57.007[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:23:57.008[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:23:57.008[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@899508d
[0;39mSpring Kotlin Cassandra > [35m14:23:57.008[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:23:57.033[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user/me]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[200]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[34ms]
[0;39mSpring Kotlin Cassandra > [35m14:24:00.038[0;39m [34m[task-4][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:24:00, committedVirtualMemorySize=427700092928, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=966656000, totalMemorySize=17179869184, freeMemorySize=29016064, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=155.19 MB, maxMemory=4.29 GB, freeMemory=39.72 MB)
[0;39mSpring Kotlin Cassandra > [35m14:24:01.454[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.455[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.455[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@441a369
[0;39mSpring Kotlin Cassandra > [35m14:24:01.455[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.461[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.461[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.461[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@196e4bbe
[0;39mSpring Kotlin Cassandra > [35m14:24:01.461[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.467[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.468[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.468[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@637ce4cf
[0;39mSpring Kotlin Cassandra > [35m14:24:01.468[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:24:01.476[0;39m [34m[http-nio-8081-exec-4][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:24:34.449[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@3cc3410e
[0;39mSpring Kotlin Cassandra > [35m14:25:10.504[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4b88031d
[0;39mSpring Kotlin Cassandra > [35m14:25:11.522[0;39m [34m[task-5][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:25:11, committedVirtualMemorySize=427829968896, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=966656000, totalMemorySize=17179869184, freeMemorySize=68583424, cpuLoad=0.4766158771904748, processCpuLoad=5.881067192229536E-4, availableProcessors=10, totalMemory=155.19 MB, maxMemory=4.29 GB, freeMemory=36.52 MB)
[0;39mSpring Kotlin Cassandra > [35m14:25:27.029[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name=?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@21afa147
[0;39mSpring Kotlin Cassandra > [35m14:27:23.618[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name LIKE ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@2bcc264a
[0;39mSpring Kotlin Cassandra > [35m14:27:24.631[0;39m [34m[task-6][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:27:24, committedVirtualMemorySize=427829968896, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=966656000, totalMemorySize=17179869184, freeMemorySize=66355200, cpuLoad=0.18985222724436532, processCpuLoad=2.56250983073367E-4, availableProcessors=10, totalMemory=155.19 MB, maxMemory=4.29 GB, freeMemory=35.86 MB)
[0;39mSpring Kotlin Cassandra > [35m14:27:35.806[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name LIKE ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@22ddfc19
[0;39mSpring Kotlin Cassandra > [35m14:27:40.880[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name LIKE ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4dce6f9e
[0;39mSpring Kotlin Cassandra > [35m14:27:59.501[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name LIKE ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@73f6dba5
[0;39mSpring Kotlin Cassandra > [35m14:28:00.509[0;39m [34m[task-7][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:28:00, committedVirtualMemorySize=427832115200, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=966656000, totalMemorySize=17179869184, freeMemorySize=58310656, cpuLoad=0.17459198917608593, processCpuLoad=0.001428545347996987, availableProcessors=10, totalMemory=155.19 MB, maxMemory=4.29 GB, freeMemory=93.74 MB)
[0;39mSpring Kotlin Cassandra > [35m14:37:47.314[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@770e75d0
[0;39mSpring Kotlin Cassandra > [35m14:37:48.320[0;39m [34m[task-8][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:37:48, committedVirtualMemorySize=427829968896, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=901644288, totalMemorySize=17179869184, freeMemorySize=46301184, cpuLoad=0.20124364047484455, processCpuLoad=1.3059383239738217E-4, availableProcessors=10, totalMemory=155.19 MB, maxMemory=4.29 GB, freeMemory=92.54 MB)
[0;39mSpring Kotlin Cassandra > [35m14:37:48.386[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:38:19.758[0;39m [34m[task-9][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:38:19, committedVirtualMemorySize=427829968896, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=901644288, totalMemorySize=17179869184, freeMemorySize=44072960, cpuLoad=0.2717699343037486, processCpuLoad=6.792487400908299E-4, availableProcessors=10, totalMemory=155.19 MB, maxMemory=4.29 GB, freeMemory=81.68 MB)
[0;39mSpring Kotlin Cassandra > [35m14:38:19.759[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@21e080c
[0;39mSpring Kotlin Cassandra > [35m14:38:19.807[0;39m [1;31m[http-nio-8081-exec-4][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE name CONTAINS ?]; Cannot use CONTAINS on non-collection column name]
[0;39mSpring Kotlin Cassandra > [35m14:38:19.822[0;39m [34m[task-10][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[858344ms]
[0;39mSpring Kotlin Cassandra > [35m14:38:31.162[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:38:31.179[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33147 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:38:31.179[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:38:31.638[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:38:31.639[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:38:31.655[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:38:31.656[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:38:31.709[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 64 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:38:31.711[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:38:31.711[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:38:31.718[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:38:32.055[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:38:32.056[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:38:32.066[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:38:32.066[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:38:32.074[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 18 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:38:32.076[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:38:32.077[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:38:32.081[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:38:32.086[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 9 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:38:32.216[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:38:32.216[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:38:32.388[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:38:32.393[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:38:32.394[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:38:32.394[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:38:32.422[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:38:32.422[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1213 ms
[0;39mSpring Kotlin Cassandra > [35m14:38:33.070[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:38:33.089[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:38:33.551[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:38:33.702[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:38:33.713[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:38:33.714[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:38:34.306[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:38:34.349[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4a57ad67, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f1b69bb, org.springframework.security.web.context.SecurityContextHolderFilter@2c78771b, org.springframework.security.web.header.HeaderWriterFilter@236a6a2a, org.springframework.web.filter.CorsFilter@c730e65, org.springframework.security.web.authentication.logout.LogoutFilter@4434eb51, com.github.senocak.skc.security.JwtAuthenticationFilter@2802caa2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cfb59e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@77035caa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@616d9a6d, org.springframework.security.web.session.SessionManagementFilter@1c8746a0, org.springframework.security.web.access.ExceptionTranslationFilter@1fcef7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7475f57e]
[0;39mSpring Kotlin Cassandra > [35m14:38:34.388[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:38:34.599[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:38:34.604[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:38:34.618[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.602 seconds (process running for 9.018)
[0;39mSpring Kotlin Cassandra > [35m14:38:41.090[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:38:41.091[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:38:41.092[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 1 ms
[0;39mSpring Kotlin Cassandra > [35m14:38:41.189[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.202[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.205[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@463da231
[0;39mSpring Kotlin Cassandra > [35m14:38:41.215[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.251[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.251[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.251[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@7e64cf8e
[0;39mSpring Kotlin Cassandra > [35m14:38:41.252[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.258[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.258[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.258[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4a776af1
[0;39mSpring Kotlin Cassandra > [35m14:38:41.258[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:38:41.264[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:38:47.564[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@55ea46b1
[0;39mSpring Kotlin Cassandra > [35m14:38:48.586[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:39:04.212[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@680a62b5
[0;39mSpring Kotlin Cassandra > [35m14:39:04.213[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:39:25.054[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@43ae1b7f
[0;39mSpring Kotlin Cassandra > [35m14:39:25.060[0;39m [34m[task-2][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:39:25, committedVirtualMemorySize=427695751168, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=910032896, totalMemorySize=17179869184, freeMemorySize=21528576, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=144.7 MB, maxMemory=4.29 GB, freeMemory=79.66 MB)
[0;39mSpring Kotlin Cassandra > [35m14:39:25.098[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE name CONTAINS ?]; Cannot use CONTAINS on non-collection column name]
[0;39mSpring Kotlin Cassandra > [35m14:39:25.190[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[43907ms]
[0;39mSpring Kotlin Cassandra > [35m14:41:57.854[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:41:57.870[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33354 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:41:57.871[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:41:58.305[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:41:58.305[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.320[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:41:58.320[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:41:58.378[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 70 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.381[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:41:58.381[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.388[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.731[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:41:58.731[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.741[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:41:58.741[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:41:58.749[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 17 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.751[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:41:58.751[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.757[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:41:58.761[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 9 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.898[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:41:58.898[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:41:59.067[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:41:59.072[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:41:59.073[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:41:59.073[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:41:59.103[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:41:59.104[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1205 ms
[0;39mSpring Kotlin Cassandra > [35m14:41:59.745[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:41:59.763[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:42:00.179[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:42:00.332[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:42:00.344[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:42:00.345[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:42:00.961[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:42:01.000[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@34e4a136, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43300e64, org.springframework.security.web.context.SecurityContextHolderFilter@76cf849f, org.springframework.security.web.header.HeaderWriterFilter@500e995b, org.springframework.web.filter.CorsFilter@27ae6f9e, org.springframework.security.web.authentication.logout.LogoutFilter@1b6982e4, com.github.senocak.skc.security.JwtAuthenticationFilter@77e4ffe5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ba8859b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2c841ac4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fdea2de, org.springframework.security.web.session.SessionManagementFilter@670e6fa3, org.springframework.security.web.access.ExceptionTranslationFilter@8497c23, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@44992466]
[0;39mSpring Kotlin Cassandra > [35m14:42:01.037[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:42:01.249[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:42:01.254[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:42:01.268[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.559 seconds (process running for 9.0)
[0;39mSpring Kotlin Cassandra > [35m14:42:07.091[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:42:07.092[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:42:07.093[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 1 ms
[0;39mSpring Kotlin Cassandra > [35m14:42:07.191[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.203[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.205[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@8006a02
[0;39mSpring Kotlin Cassandra > [35m14:42:07.215[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.248[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.249[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.249[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@6136afb4
[0;39mSpring Kotlin Cassandra > [35m14:42:07.249[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.255[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.256[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.256[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@19d54681
[0;39mSpring Kotlin Cassandra > [35m14:42:07.256[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:07.263[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:42:12.657[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4b900375
[0;39mSpring Kotlin Cassandra > [35m14:42:12.748[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE name CONTAINS ?]; Cannot use CONTAINS on non-collection column name]
[0;39mSpring Kotlin Cassandra > [35m14:42:12.792[0;39m [34m[task-2][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[5523ms]
[0;39mSpring Kotlin Cassandra > [35m14:42:25.995[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:25.996[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:25.996[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@1a78f7d1
[0;39mSpring Kotlin Cassandra > [35m14:42:26.018[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:26.040[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:26.041[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:26.041[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@39a45363
[0;39mSpring Kotlin Cassandra > [35m14:42:26.041[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:26.046[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:26.047[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:26.047[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@193ea6c9
[0;39mSpring Kotlin Cassandra > [35m14:42:26.047[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:26.051[0;39m [34m[http-nio-8081-exec-4][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:42:26.063[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@575c2a16
[0;39mSpring Kotlin Cassandra > [35m14:42:26.075[0;39m [1;31m[http-nio-8081-exec-4][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE name CONTAINS ?]; Cannot use CONTAINS on non-collection column name]
[0;39mSpring Kotlin Cassandra > [35m14:42:26.078[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[24ms]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.769[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.771[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.772[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@70475247
[0;39mSpring Kotlin Cassandra > [35m14:42:47.772[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.799[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.800[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.800[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@74243bc3
[0;39mSpring Kotlin Cassandra > [35m14:42:47.800[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.805[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.806[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.806[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@6ce265e6
[0;39mSpring Kotlin Cassandra > [35m14:42:47.806[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:42:47.813[0;39m [34m[http-nio-8081-exec-6][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:42:53.950[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name LIKE ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@7648a923
[0;39mSpring Kotlin Cassandra > [35m14:43:01.902[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name=?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@1dfa5709
[0;39mSpring Kotlin Cassandra > [35m14:43:02.961[0;39m [34m[task-4][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:43:02, committedVirtualMemorySize=427431608320, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=919076864, totalMemorySize=17179869184, freeMemorySize=64471040, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=146.8 MB, maxMemory=4.29 GB, freeMemory=77.87 MB)
[0;39mSpring Kotlin Cassandra > [35m14:43:22.779[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4ad2ccfa
[0;39mSpring Kotlin Cassandra > [35m14:43:23.801[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:44:00.813[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@15318363
[0;39mSpring Kotlin Cassandra > [35m14:44:01.828[0;39m [34m[task-5][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:44:01, committedVirtualMemorySize=427429462016, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=919076864, totalMemorySize=17179869184, freeMemorySize=26935296, cpuLoad=0.20868784840274063, processCpuLoad=4.752528329002968E-4, availableProcessors=10, totalMemory=146.8 MB, maxMemory=4.29 GB, freeMemory=76.93 MB)
[0;39mSpring Kotlin Cassandra > [35m14:44:01.890[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:44:02.091[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@1545a070
[0;39mSpring Kotlin Cassandra > [35m14:44:02.091[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:44:27.241[0;39m [39m[http-nio-8081-exec-6][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ?] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@682b3593
[0;39mSpring Kotlin Cassandra > [35m14:44:27.284[0;39m [1;31m[http-nio-8081-exec-6][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE name CONTAINS ?]; Cannot use CONTAINS on non-collection column name]
[0;39mSpring Kotlin Cassandra > [35m14:44:27.288[0;39m [34m[task-6][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[99472ms]
[0;39mSpring Kotlin Cassandra > [35m14:44:40.313[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:44:40.330[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33442 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:44:40.331[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:44:40.760[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:44:40.760[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:44:40.773[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:44:40.774[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:44:40.833[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 71 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:44:40.836[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:44:40.836[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:44:40.842[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:44:41.202[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:44:41.202[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:44:41.212[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:44:41.213[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:44:41.213[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 11 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:44:41.215[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:44:41.215[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:44:41.220[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:44:41.225[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 9 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:44:41.354[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:44:41.355[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:44:41.527[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:44:41.532[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:44:41.533[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:44:41.533[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:44:41.563[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:44:41.564[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1205 ms
[0;39mSpring Kotlin Cassandra > [35m14:44:42.218[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:44:42.235[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:44:42.615[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:44:42.773[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:44:42.784[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:44:42.785[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:44:43.372[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:44:43.414[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5915ab69, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d63f6be, org.springframework.security.web.context.SecurityContextHolderFilter@5854e526, org.springframework.security.web.header.HeaderWriterFilter@3435b6d8, org.springframework.web.filter.CorsFilter@23a0c7f3, org.springframework.security.web.authentication.logout.LogoutFilter@5f1d270a, com.github.senocak.skc.security.JwtAuthenticationFilter@57d1edf0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6872201, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@669ae205, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21b96db, org.springframework.security.web.session.SessionManagementFilter@236a6a2a, org.springframework.security.web.access.ExceptionTranslationFilter@93fb20b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fdea2de]
[0;39mSpring Kotlin Cassandra > [35m14:44:43.451[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:44:43.661[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:44:43.666[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:44:43.680[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.512 seconds (process running for 8.953)
[0;39mSpring Kotlin Cassandra > [35m14:44:47.590[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:44:47.591[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:44:47.592[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 1 ms
[0;39mSpring Kotlin Cassandra > [35m14:44:47.691[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.704[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.707[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@7e20f0e7
[0;39mSpring Kotlin Cassandra > [35m14:44:47.719[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.759[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.760[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.760[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@16512c2b
[0;39mSpring Kotlin Cassandra > [35m14:44:47.760[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.766[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.766[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.767[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4eedf8a3
[0;39mSpring Kotlin Cassandra > [35m14:44:47.767[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:44:47.773[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:44:52.022[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@64b07e80
[0;39mSpring Kotlin Cassandra > [35m14:44:53.057[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:08.366[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@12017d32
[0;39mSpring Kotlin Cassandra > [35m14:45:08.368[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:10.885[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@5903b4ba
[0;39mSpring Kotlin Cassandra > [35m14:45:10.886[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:10.886[0;39m [34m[task-2][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:45:08, committedVirtualMemorySize=427563679744, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=919076864, totalMemorySize=17179869184, freeMemorySize=65355776, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=117.44 MB, maxMemory=4.29 GB, freeMemory=48.47 MB)
[0;39mSpring Kotlin Cassandra > [35m14:45:10.935[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:45:10.981[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[23203ms]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.806[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.807[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.807[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@63a9d8fe
[0;39mSpring Kotlin Cassandra > [35m14:45:13.807[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.818[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.818[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.818[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4e082115
[0;39mSpring Kotlin Cassandra > [35m14:45:13.819[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.825[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.825[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.825[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@57233aa7
[0;39mSpring Kotlin Cassandra > [35m14:45:13.825[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:13.833[0;39m [34m[http-nio-8081-exec-4][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:45:17.196[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@6520fbf5
[0;39mSpring Kotlin Cassandra > [35m14:45:17.197[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:39.629[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@28d4d96e
[0;39mSpring Kotlin Cassandra > [35m14:45:39.632[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:39.666[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@1b66344d
[0;39mSpring Kotlin Cassandra > [35m14:45:39.666[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:39.683[0;39m [1;31m[http-nio-8081-exec-4][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:45:39.686[0;39m [34m[task-4][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[25853ms]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.743[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.743[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.743[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@299ca358
[0;39mSpring Kotlin Cassandra > [35m14:45:41.743[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.763[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.764[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.764[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@531592f0
[0;39mSpring Kotlin Cassandra > [35m14:45:41.764[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.770[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.770[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.770[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@8a789b0
[0;39mSpring Kotlin Cassandra > [35m14:45:41.770[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:41.778[0;39m [34m[http-nio-8081-exec-5][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:45:51.352[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@37b20231
[0;39mSpring Kotlin Cassandra > [35m14:45:51.354[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:51.391[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@14f5e8d6
[0;39mSpring Kotlin Cassandra > [35m14:45:51.391[0;39m [39m[http-nio-8081-exec-5][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:45:51.402[0;39m [1;31m[http-nio-8081-exec-5][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:45:51.407[0;39m [34m[task-5][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[9627ms]
[0;39mSpring Kotlin Cassandra > [35m14:47:26.934[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:47:26.950[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33531 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:47:26.950[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:47:27.384[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:47:27.385[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.398[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:47:27.399[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:47:27.454[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 67 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.457[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:47:27.457[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.465[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.808[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:47:27.808[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.818[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:47:27.819[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:47:27.819[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 10 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.821[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:47:27.821[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.833[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:47:27.838[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 16 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.969[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:47:27.969[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:47:28.143[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:47:28.148[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:47:28.149[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:47:28.149[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:47:28.180[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:47:28.180[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1200 ms
[0;39mSpring Kotlin Cassandra > [35m14:47:28.835[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:47:28.852[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:47:29.265[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:47:29.424[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:47:29.437[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:47:29.437[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:47:30.044[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:47:30.085[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3f803fae, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33224703, org.springframework.security.web.context.SecurityContextHolderFilter@2940eec0, org.springframework.security.web.header.HeaderWriterFilter@93fb20b, org.springframework.web.filter.CorsFilter@5915ab69, org.springframework.security.web.authentication.logout.LogoutFilter@2daf650b, com.github.senocak.skc.security.JwtAuthenticationFilter@1297cf8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5854e526, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@289fff3c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d63f6be, org.springframework.security.web.session.SessionManagementFilter@1fcef7, org.springframework.security.web.access.ExceptionTranslationFilter@29471e3e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43300e64]
[0;39mSpring Kotlin Cassandra > [35m14:47:30.127[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:47:30.336[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:47:30.341[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:47:30.355[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.563 seconds (process running for 9.027)
[0;39mSpring Kotlin Cassandra > [35m14:47:32.479[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:47:32.480[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:47:32.482[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 2 ms
[0;39mSpring Kotlin Cassandra > [35m14:47:32.579[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.592[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.594[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@6f2e315a
[0;39mSpring Kotlin Cassandra > [35m14:47:32.603[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.643[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.643[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.644[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@61a0cfc6
[0;39mSpring Kotlin Cassandra > [35m14:47:32.644[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.651[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.651[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.651[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@1a62c41e
[0;39mSpring Kotlin Cassandra > [35m14:47:32.651[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:47:32.657[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:47:40.271[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@63698a43
[0;39mSpring Kotlin Cassandra > [35m14:47:41.300[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:51:27.209[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@5f66da59
[0;39mSpring Kotlin Cassandra > [35m14:51:27.250[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:51:27.264[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@1f55d4f3
[0;39mSpring Kotlin Cassandra > [35m14:51:27.264[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:51:27.265[0;39m [34m[task-2][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:51:27, committedVirtualMemorySize=427691458560, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=919076864, totalMemorySize=17179869184, freeMemorySize=62029824, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=144.7 MB, maxMemory=4.29 GB, freeMemory=84.65 MB)
[0;39mSpring Kotlin Cassandra > [35m14:51:27.279[0;39m [1;31m[http-nio-8081-exec-1][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:51:27.344[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[234681ms]
[0;39mSpring Kotlin Cassandra > [35m14:51:45.425[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:51:45.441[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33652 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:51:45.442[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:51:45.891[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:51:45.892[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:51:45.904[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:51:45.905[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:51:45.961[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 67 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:51:45.964[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:51:45.964[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:51:45.970[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:51:46.307[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:51:46.307[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:51:46.318[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:51:46.318[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:51:46.318[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 11 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:51:46.320[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:51:46.320[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:51:46.333[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:51:46.338[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 17 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:51:46.472[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:51:46.472[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:51:46.642[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:51:46.647[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:51:46.647[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:51:46.648[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:51:46.678[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:51:46.678[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1208 ms
[0;39mSpring Kotlin Cassandra > [35m14:51:47.321[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:51:47.338[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:51:47.781[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:51:47.939[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:51:47.952[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:51:47.952[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:51:48.554[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:51:48.593[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1f15d346, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fb70e94, org.springframework.security.web.context.SecurityContextHolderFilter@7a174e4b, org.springframework.security.web.header.HeaderWriterFilter@3b5f72fa, org.springframework.web.filter.CorsFilter@5abf9a76, org.springframework.security.web.authentication.logout.LogoutFilter@181a6784, com.github.senocak.skc.security.JwtAuthenticationFilter@29897daf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46a5aff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@695f382c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e132a9b, org.springframework.security.web.session.SessionManagementFilter@4e09c3b0, org.springframework.security.web.access.ExceptionTranslationFilter@375f276e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5297030e]
[0;39mSpring Kotlin Cassandra > [35m14:51:48.630[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:51:48.843[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:51:48.848[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:51:48.861[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.578 seconds (process running for 13.96)
[0;39mSpring Kotlin Cassandra > [35m14:51:53.888[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:51:53.890[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:51:53.894[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 4 ms
[0;39mSpring Kotlin Cassandra > [35m14:51:54.066[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.085[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.089[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4b837c3d
[0;39mSpring Kotlin Cassandra > [35m14:51:54.117[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.214[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.215[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.215[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@787d1cd2
[0;39mSpring Kotlin Cassandra > [35m14:51:54.215[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.224[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.224[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.224[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@dc53b0c
[0;39mSpring Kotlin Cassandra > [35m14:51:54.224[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:51:54.236[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:51:57.123[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ? AND email CONTAINS ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@12004c63
[0;39mSpring Kotlin Cassandra > [35m14:54:28.993[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ? AND email CONTAINS ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@2f378849
[0;39mSpring Kotlin Cassandra > [35m14:54:29.040[0;39m [34m[task-2][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:54:29, committedVirtualMemorySize=427693604864, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=927465472, totalMemorySize=17179869184, freeMemorySize=40878080, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=146.8 MB, maxMemory=4.29 GB, freeMemory=86.96 MB)
[0;39mSpring Kotlin Cassandra > [35m14:54:29.040[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE name CONTAINS ? AND email CONTAINS ? ALLOW FILTERING]; Cannot use CONTAINS on non-collection column name]
[0;39mSpring Kotlin Cassandra > [35m14:54:29.114[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[154859ms]
[0;39mSpring Kotlin Cassandra > [35m14:54:42.242[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:54:42.259[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33811 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:54:42.259[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:54:42.679[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:54:42.679[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:54:42.692[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:54:42.692[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:54:42.746[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 65 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:54:42.749[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:54:42.749[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:54:42.755[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:54:43.103[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:54:43.103[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:54:43.114[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:54:43.114[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:54:43.115[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 11 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:54:43.117[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:54:43.117[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:54:43.130[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:54:43.134[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 16 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:54:43.265[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:54:43.265[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:54:43.441[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:54:43.446[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:54:43.446[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:54:43.446[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:54:43.479[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:54:43.480[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1192 ms
[0;39mSpring Kotlin Cassandra > [35m14:54:44.192[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:54:44.217[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:54:44.571[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:54:44.721[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:54:44.732[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:54:44.733[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:54:45.360[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:54:45.403[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4620e669, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b93a232, org.springframework.security.web.context.SecurityContextHolderFilter@a824f87, org.springframework.security.web.header.HeaderWriterFilter@669ae205, org.springframework.web.filter.CorsFilter@6c6fdf5d, org.springframework.security.web.authentication.logout.LogoutFilter@628190ec, com.github.senocak.skc.security.JwtAuthenticationFilter@6f45be42, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1eb3a6a3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30f0b75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@187c8f96, org.springframework.security.web.session.SessionManagementFilter@77035caa, org.springframework.security.web.access.ExceptionTranslationFilter@289fff3c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a40e660]
[0;39mSpring Kotlin Cassandra > [35m14:54:45.440[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:54:45.693[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:54:45.715[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:54:45.740[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.638 seconds (process running for 9.078)
[0;39mSpring Kotlin Cassandra > [35m14:54:48.506[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:54:48.506[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:54:48.508[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 2 ms
[0;39mSpring Kotlin Cassandra > [35m14:54:48.605[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.618[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.620[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@38b36a3d
[0;39mSpring Kotlin Cassandra > [35m14:54:48.629[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.661[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.662[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.662[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@2542abb0
[0;39mSpring Kotlin Cassandra > [35m14:54:48.662[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.679[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.679[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.680[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@3cb2a597
[0;39mSpring Kotlin Cassandra > [35m14:54:48.680[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:54:48.683[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:54:53.034[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name LIKE ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@e438835
[0;39mSpring Kotlin Cassandra > [35m14:55:28.049[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name LIKE ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@3d03681a
[0;39mSpring Kotlin Cassandra > [35m14:55:28.098[0;39m [34m[task-2][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:55:28, committedVirtualMemorySize=427701993472, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=927465472, totalMemorySize=17179869184, freeMemorySize=72876032, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=119.54 MB, maxMemory=4.29 GB, freeMemory=46.78 MB)
[0;39mSpring Kotlin Cassandra > [35m14:55:28.147[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE name LIKE ? ALLOW FILTERING]; LIKE restriction is only supported on properly indexed columns. name LIKE ? is not valid.]
[0;39mSpring Kotlin Cassandra > [35m14:55:28.224[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[39524ms]
[0;39mSpring Kotlin Cassandra > [35m14:55:43.510[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:55:43.527[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33853 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:55:43.528[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:55:43.963[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:55:43.963[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:55:43.976[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:55:43.977[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:55:44.031[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 66 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.034[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:55:44.034[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.040[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.411[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:55:44.411[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.431[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:55:44.431[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:55:44.432[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 20 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.434[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:55:44.435[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.440[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:55:44.445[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 9 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.593[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.593[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:55:44.770[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:55:44.774[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:55:44.775[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:55:44.775[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:55:44.804[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:55:44.804[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1246 ms
[0;39mSpring Kotlin Cassandra > [35m14:55:45.443[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:55:45.460[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:55:45.887[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:55:46.247[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:55:46.260[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:55:46.261[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:55:46.941[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:55:46.986[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@70ba01be, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b3fd4d2, org.springframework.security.web.context.SecurityContextHolderFilter@1bc80978, org.springframework.security.web.header.HeaderWriterFilter@2c841ac4, org.springframework.web.filter.CorsFilter@3020f22, org.springframework.security.web.authentication.logout.LogoutFilter@fd07138, com.github.senocak.skc.security.JwtAuthenticationFilter@118d7e0e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@613d42ab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7720334e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a40e660, org.springframework.security.web.session.SessionManagementFilter@4e293c35, org.springframework.security.web.access.ExceptionTranslationFilter@62a89e92, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d63f6be]
[0;39mSpring Kotlin Cassandra > [35m14:55:47.028[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:55:47.261[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:55:47.265[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:55:47.279[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.908 seconds (process running for 9.337)
[0;39mSpring Kotlin Cassandra > [35m14:55:48.142[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:55:48.142[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:55:48.143[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 1 ms
[0;39mSpring Kotlin Cassandra > [35m14:55:48.233[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.244[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.245[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@266b387f
[0;39mSpring Kotlin Cassandra > [35m14:55:48.253[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.286[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.286[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.286[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@7f18b257
[0;39mSpring Kotlin Cassandra > [35m14:55:48.290[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.295[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.295[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.295[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@5e596d26
[0;39mSpring Kotlin Cassandra > [35m14:55:48.295[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:55:48.300[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:55:50.447[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@277da258
[0;39mSpring Kotlin Cassandra > [35m14:55:51.524[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:04.733[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@283a9142
[0;39mSpring Kotlin Cassandra > [35m14:56:04.736[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:04.753[0;39m [34m[task-2][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:56:04, committedVirtualMemorySize=427693604864, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=927465472, totalMemorySize=17179869184, freeMemorySize=66699264, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=119.54 MB, maxMemory=4.29 GB, freeMemory=52.57 MB)
[0;39mSpring Kotlin Cassandra > [35m14:56:04.767[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@5f0b029
[0;39mSpring Kotlin Cassandra > [35m14:56:04.767[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:04.783[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:56:04.847[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[16541ms]
[0;39mSpring Kotlin Cassandra > [35m14:56:17.781[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:56:17.799[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33863 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:56:17.799[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:56:18.268[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:56:18.269[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:56:18.283[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:56:18.285[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:56:18.353[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 82 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:56:18.356[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:56:18.356[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:56:18.363[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:56:18.902[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:56:18.902[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:56:18.914[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:56:18.914[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:56:18.915[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 12 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:56:18.925[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:56:18.925[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:56:18.931[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:56:18.937[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 11 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:56:19.102[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:56:19.102[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:56:19.307[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:56:19.312[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:56:19.313[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:56:19.313[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:56:19.348[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:56:19.348[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1517 ms
[0;39mSpring Kotlin Cassandra > [35m14:56:20.227[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:56:20.248[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:56:20.598[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:56:20.756[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:56:20.767[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:56:20.768[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:56:21.411[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:56:21.452[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@21b96db, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76a13b12, org.springframework.security.web.context.SecurityContextHolderFilter@669ae205, org.springframework.security.web.header.HeaderWriterFilter@55fb9e52, org.springframework.web.filter.CorsFilter@7475f57e, org.springframework.security.web.authentication.logout.LogoutFilter@4e7d77ec, com.github.senocak.skc.security.JwtAuthenticationFilter@4ef7145f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e293c35, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@718198db, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@514f2b5c, org.springframework.security.web.session.SessionManagementFilter@5854e526, org.springframework.security.web.access.ExceptionTranslationFilter@13553828, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49a46f29]
[0;39mSpring Kotlin Cassandra > [35m14:56:21.491[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:56:21.703[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:56:21.708[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:56:21.722[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 4.087 seconds (process running for 9.521)
[0;39mSpring Kotlin Cassandra > [35m14:56:27.647[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:56:27.648[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:56:27.656[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 8 ms
[0;39mSpring Kotlin Cassandra > [35m14:56:27.776[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.790[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.792[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4c855745
[0;39mSpring Kotlin Cassandra > [35m14:56:27.816[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.878[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.878[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.878[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@3c96ccbe
[0;39mSpring Kotlin Cassandra > [35m14:56:27.878[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.884[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.884[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.884[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@7b5e909e
[0;39mSpring Kotlin Cassandra > [35m14:56:27.884[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:27.891[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:56:31.726[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@51dff1c9
[0;39mSpring Kotlin Cassandra > [35m14:56:32.783[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:41.536[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@53868444
[0;39mSpring Kotlin Cassandra > [35m14:56:41.537[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:41.557[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@15314900
[0;39mSpring Kotlin Cassandra > [35m14:56:41.557[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:41.606[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:56:41.643[0;39m [34m[task-2][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[13746ms]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.304[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.305[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.305[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@24861b13
[0;39mSpring Kotlin Cassandra > [35m14:56:46.323[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.352[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.352[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.352[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4515f6ae
[0;39mSpring Kotlin Cassandra > [35m14:56:46.352[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.358[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.358[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.358[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@724b738a
[0;39mSpring Kotlin Cassandra > [35m14:56:46.358[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:46.362[0;39m [34m[http-nio-8081-exec-3][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:56:47.862[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@75152ea2
[0;39mSpring Kotlin Cassandra > [35m14:56:47.862[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:56.707[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@2a9788c8
[0;39mSpring Kotlin Cassandra > [35m14:56:56.709[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:56.765[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@662261e2
[0;39mSpring Kotlin Cassandra > [35m14:56:56.765[0;39m [39m[http-nio-8081-exec-3][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? AND email IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:56:56.771[0;39m [1;31m[http-nio-8081-exec-3][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:56:56.777[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[10411ms]
[0;39mSpring Kotlin Cassandra > [35m14:57:09.903[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:57:09.920[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33897 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:57:09.920[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:57:10.341[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:57:10.341[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.354[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:57:10.354[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:57:10.409[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 65 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.411[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:57:10.411[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.417[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.757[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:57:10.757[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.767[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:57:10.767[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:57:10.775[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 17 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.777[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:57:10.777[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.783[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:57:10.787[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 9 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.914[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:57:10.915[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:57:11.085[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:57:11.090[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:57:11.091[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:57:11.091[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:57:11.120[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:57:11.121[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1172 ms
[0;39mSpring Kotlin Cassandra > [35m14:57:11.773[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:57:11.789[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:57:12.127[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:57:12.269[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:57:12.280[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:57:12.281[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:57:12.884[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:57:12.924[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@424ebf5b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42cef0af, org.springframework.security.web.context.SecurityContextHolderFilter@29471e3e, org.springframework.security.web.header.HeaderWriterFilter@44189797, org.springframework.web.filter.CorsFilter@44992466, org.springframework.security.web.authentication.logout.LogoutFilter@aec9672, com.github.senocak.skc.security.JwtAuthenticationFilter@6c7bc8ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@93fb20b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2512eaaa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55bf08a5, org.springframework.security.web.session.SessionManagementFilter@10395bc4, org.springframework.security.web.access.ExceptionTranslationFilter@670199c5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@596343e7]
[0;39mSpring Kotlin Cassandra > [35m14:57:12.966[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:57:13.173[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:57:13.181[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:57:13.195[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.429 seconds (process running for 8.865)
[0;39mSpring Kotlin Cassandra > [35m14:57:15.058[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:57:15.058[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:57:15.060[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 2 ms
[0;39mSpring Kotlin Cassandra > [35m14:57:15.153[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.166[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.168[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@5dbb5347
[0;39mSpring Kotlin Cassandra > [35m14:57:15.176[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.207[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.207[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.208[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@3f24301a
[0;39mSpring Kotlin Cassandra > [35m14:57:15.208[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.217[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.217[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.217[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@65531230
[0;39mSpring Kotlin Cassandra > [35m14:57:15.217[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:15.224[0;39m [34m[http-nio-8081-exec-1][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:57:18.421[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@35dbbc25
[0;39mSpring Kotlin Cassandra > [35m14:57:19.433[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:25.876[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@a90e7be
[0;39mSpring Kotlin Cassandra > [35m14:57:25.878[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:25.892[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@3c005277
[0;39mSpring Kotlin Cassandra > [35m14:57:25.892[0;39m [39m[http-nio-8081-exec-1][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:25.926[0;39m [1;31m[http-nio-8081-exec-1][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:57:26.004[0;39m [34m[task-2][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[10772ms]
[0;39mSpring Kotlin Cassandra > [35m14:57:27.989[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:57:27.989[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:57:27.989[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@49ab0b14
[0;39mSpring Kotlin Cassandra > [35m14:57:28.000[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:28.019[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:57:28.019[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:57:28.019[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@53cb280f
[0;39mSpring Kotlin Cassandra > [35m14:57:28.019[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:28.024[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:57:28.024[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:57:28.024[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@50f88946
[0;39mSpring Kotlin Cassandra > [35m14:57:28.024[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:28.030[0;39m [34m[http-nio-8081-exec-4][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:57:29.471[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@51d766c
[0;39mSpring Kotlin Cassandra > [35m14:57:30.482[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:51.130[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@44d58a9e
[0;39mSpring Kotlin Cassandra > [35m14:57:51.139[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:51.181[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@53a028af
[0;39mSpring Kotlin Cassandra > [35m14:57:51.181[0;39m [39m[http-nio-8081-exec-4][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE name IN ? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:57:51.187[0;39m [1;31m[http-nio-8081-exec-4][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Handler dispatch failed: kotlin.NotImplementedError: An operation is not implemented.]
[0;39mSpring Kotlin Cassandra > [35m14:57:51.193[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[23160ms]
[0;39mSpring Kotlin Cassandra > [35m14:58:02.575[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:58:02.596[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33931 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:58:02.596[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:58:03.029[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:58:03.029[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.041[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:58:03.042[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:58:03.097[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 65 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.099[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:58:03.099[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.105[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.445[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:58:03.445[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.455[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:58:03.456[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:58:03.463[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 18 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.465[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:58:03.466[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.471[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:58:03.475[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 9 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.608[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.608[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:58:03.780[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:58:03.785[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:58:03.786[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:58:03.786[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:58:03.812[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:58:03.812[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1181 ms
[0;39mSpring Kotlin Cassandra > [35m14:58:04.474[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:58:04.490[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:58:04.804[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:58:04.961[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:58:04.973[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:58:04.974[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:58:05.577[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:58:05.620[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4620e669, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b93a232, org.springframework.security.web.context.SecurityContextHolderFilter@a824f87, org.springframework.security.web.header.HeaderWriterFilter@669ae205, org.springframework.web.filter.CorsFilter@6c6fdf5d, org.springframework.security.web.authentication.logout.LogoutFilter@628190ec, com.github.senocak.skc.security.JwtAuthenticationFilter@6f45be42, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1eb3a6a3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30f0b75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@187c8f96, org.springframework.security.web.session.SessionManagementFilter@77035caa, org.springframework.security.web.access.ExceptionTranslationFilter@289fff3c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a40e660]
[0;39mSpring Kotlin Cassandra > [35m14:58:05.658[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:58:05.867[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:58:05.871[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:58:05.886[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.477 seconds (process running for 8.899)
[0;39mSpring Kotlin Cassandra > [35m14:58:09.842[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:58:09.843[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:58:09.844[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 1 ms
[0;39mSpring Kotlin Cassandra > [35m14:58:09.946[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:58:09.961[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:58:09.963[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@2ab5d644
[0;39mSpring Kotlin Cassandra > [35m14:58:09.973[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:58:10.016[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:58:10.016[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:58:10.016[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@2b35a6fc
[0;39mSpring Kotlin Cassandra > [35m14:58:10.016[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:58:10.023[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:58:10.023[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:58:10.024[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@36718f62
[0;39mSpring Kotlin Cassandra > [35m14:58:10.024[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:58:10.029[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:58:12.275[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@bc376e4
[0;39mSpring Kotlin Cassandra > [35m14:59:00.337[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name CONTAINS ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@ea0440b
[0;39mSpring Kotlin Cassandra > [35m14:59:00.383[0;39m [34m[task-2][0;39m INFO  [userId: scheduler]  [36mc.g.s.skc.service.ScheduledTasks[0;39m - [34mPerformance(timestamp=2024-05-130 14:59:00, committedVirtualMemorySize=427701993472, totalSwapSpaceSize=2147483648, freeSwapSpaceSize=857341952, totalMemorySize=17179869184, freeMemorySize=53968896, cpuLoad=0.0, processCpuLoad=0.0, availableProcessors=10, totalMemory=144.7 MB, maxMemory=4.29 GB, freeMemory=79.75 MB)
[0;39mSpring Kotlin Cassandra > [35m14:59:00.399[0;39m [1;31m[http-nio-8081-exec-2][0;39m ERROR [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.e.RestExceptionHandler[0;39m - [34mException is handled. HttpStatus: 500 INTERNAL_SERVER_ERROR, OmaErrorMessageType: GENERIC_SERVICE_ERROR, variables: [Server error!, Query; CQL [SELECT * FROM users WHERE name CONTAINS ? ALLOW FILTERING]; Cannot use CONTAINS on non-collection column name]
[0;39mSpring Kotlin Cassandra > [35m14:59:00.469[0;39m [34m[task-3][0;39m INFO  [userId: ]  [36mc.g.senocak.skc.service.Listeners[0;39m - [34m[RequestHandledEvent]: ServletRequestHandledEvent: url=[/api/v1/user]; client=[0:0:0:0:0:0:0:1]; method=[GET]; status=[500]; servlet=[dispatcherServlet]; session=[null]; user=[anil1@senocak.com]; time=[50432ms]
[0;39mSpring Kotlin Cassandra > [35m14:59:14.041[0;39m [34m[background-preinit][0;39m INFO  [userId: ]  [36mo.h.validator.internal.util.Version[0;39m - [34mHV000001: Hibernate Validator 8.0.1.Final
[0;39mSpring Kotlin Cassandra > [35m14:59:14.059[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarting SpringKotlinCassandraApplicationKt using Java 17.0.10 with PID 33983 (/Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra/build/classes/kotlin/main started by tcasenocak in /Users/tcasenocak/Desktop/github/Spring Kotlin Cassandra)
[0;39mSpring Kotlin Cassandra > [35m14:59:14.059[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mNo active profile set, falling back to 1 default profile: "default"
[0;39mSpring Kotlin Cassandra > [35m14:59:14.505[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:59:14.505[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:59:14.519[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:59:14.519[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:59:14.578[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 70 ms. Found 1 Cassandra repository interface.
[0;39mSpring Kotlin Cassandra > [35m14:59:14.581[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:59:14.581[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:59:14.588[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:59:14.945[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:59:14.945[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:59:14.967[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.JwtTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:59:14.968[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.PasswordResetTokenRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
[0;39mSpring Kotlin Cassandra > [35m14:59:14.969[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 23 ms. Found 0 Reactive Cassandra repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:59:14.971[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mMultiple Spring Data modules found, entering strict repository configuration mode
[0;39mSpring Kotlin Cassandra > [35m14:59:14.971[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mBootstrapping Spring Data Redis repositories in DEFAULT mode.
[0;39mSpring Kotlin Cassandra > [35m14:59:14.981[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationExtensionSupport[0;39m - [34mSpring Data Redis - Could not safely identify store assignment for repository candidate interface com.github.senocak.skc.domain.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[0;39mSpring Kotlin Cassandra > [35m14:59:14.987[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - [34mFinished Spring Data repository scanning in 16 ms. Found 2 Redis repository interfaces.
[0;39mSpring Kotlin Cassandra > [35m14:59:15.133[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'dataSourceConfig' of type [com.github.senocak.skc.config.DataSourceConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [exceptionTranslation]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[0;39mSpring Kotlin Cassandra > [35m14:59:15.133[0;39m [31m[main][0;39m WARN  [userId: ]  [36mo.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m - [34mBean 'cassandraConfig' of type [com.github.senocak.skc.config.CassandraConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [exceptionTranslation] is declared through a non-static factory method on that class; consider declaring it as static instead.
[0;39mSpring Kotlin Cassandra > [35m14:59:15.308[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat initialized with port 8081 (http)
[0;39mSpring Kotlin Cassandra > [35m14:59:15.313[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mInitializing ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:59:15.313[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardService[0;39m - [34mStarting service [Tomcat]
[0;39mSpring Kotlin Cassandra > [35m14:59:15.314[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.catalina.core.StandardEngine[0;39m - [34mStarting Servlet engine: [Apache Tomcat/10.1.20]
[0;39mSpring Kotlin Cassandra > [35m14:59:15.347[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring embedded WebApplicationContext
[0;39mSpring Kotlin Cassandra > [35m14:59:15.347[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m - [34mRoot WebApplicationContext: initialization completed in 1256 ms
[0;39mSpring Kotlin Cassandra > [35m14:59:16.019[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.DefaultMavenCoordinates[0;39m - [34mDataStax Java driver for Apache Cassandra(R) (com.datastax.oss:java-driver-core) version 4.17.0
[0;39mSpring Kotlin Cassandra > [35m14:59:16.037[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:59:16.442[0;39m [34m[s0-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:59:16.592[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.d.c.config.CqlSessionFactoryBean[0;39m - [34mExecuting CQL [CREATE KEYSPACE IF NOT EXISTS asenocak WITH durable_writes = true AND replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };]
[0;39mSpring Kotlin Cassandra > [35m14:59:16.606[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[0;39m - [34mAdding handler to invalidate cached prepared statements on type changes
[0;39mSpring Kotlin Cassandra > [35m14:59:16.606[0;39m [34m[s1-admin-0][0;39m INFO  [userId: ]  [36mc.d.o.d.internal.core.time.Clock[0;39m - [34mUsing native clock for microsecond precision
[0;39mSpring Kotlin Cassandra > [35m14:59:17.286[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.a.e.web.EndpointLinksResolver[0;39m - [34mExposing 1 endpoint(s) beneath base path '/actuator'
[0;39mSpring Kotlin Cassandra > [35m14:59:17.329[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.s.web.DefaultSecurityFilterChain[0;39m - [34mWill secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@21b96db, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76a13b12, org.springframework.security.web.context.SecurityContextHolderFilter@669ae205, org.springframework.security.web.header.HeaderWriterFilter@55fb9e52, org.springframework.web.filter.CorsFilter@7475f57e, org.springframework.security.web.authentication.logout.LogoutFilter@4e7d77ec, com.github.senocak.skc.security.JwtAuthenticationFilter@4ef7145f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e293c35, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@718198db, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@514f2b5c, org.springframework.security.web.session.SessionManagementFilter@5854e526, org.springframework.security.web.access.ExceptionTranslationFilter@13553828, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49a46f29]
[0;39mSpring Kotlin Cassandra > [35m14:59:17.371[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.c.AppConfig$$SpringCGLIB$$0[0;39m - [34mCore pool size: 10, max pool size: 10000,keepAliveSeconds: 60, queueCapacity: -1,queueSize: 0
[0;39mSpring Kotlin Cassandra > [35m14:59:17.589[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.a.coyote.http11.Http11NioProtocol[0;39m - [34mStarting ProtocolHandler ["http-nio-8081"]
[0;39mSpring Kotlin Cassandra > [35m14:59:17.594[0;39m [34m[main][0;39m INFO  [userId: ]  [36mo.s.b.w.e.tomcat.TomcatWebServer[0;39m - [34mTomcat started on port 8081 (http) with context path ''
[0;39mSpring Kotlin Cassandra > [35m14:59:17.609[0;39m [34m[main][0;39m INFO  [userId: ]  [36mc.g.s.s.SpringKotlinCassandraApplicationKt[0;39m - [34mStarted SpringKotlinCassandraApplicationKt in 3.728 seconds (process running for 9.163)
[0;39mSpring Kotlin Cassandra > [35m14:59:18.214[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.a.c.c.C.[Tomcat].[localhost].[/][0;39m - [34mInitializing Spring DispatcherServlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:59:18.215[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mInitializing Servlet 'dispatcherServlet'
[0;39mSpring Kotlin Cassandra > [35m14:59:18.216[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: ]  [36mo.s.web.servlet.DispatcherServlet[0;39m - [34mCompleted initialization in 1 ms
[0;39mSpring Kotlin Cassandra > [35m14:59:18.303[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.315[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.317[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@2751c9bf
[0;39mSpring Kotlin Cassandra > [35m14:59:18.326[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.360[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.360[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.360[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@595a999f
[0;39mSpring Kotlin Cassandra > [35m14:59:18.360[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.367[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.CassandraQueryCreator[0;39m - [34mCreated query [Query: email = 'anil1@senocak.com', Columns: *, Sort: UNSORTED, Limit: 0]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.367[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.c.r.q.QueryStatementCreator[0;39m - [34mCreated query [com.datastax.oss.driver.internal.core.cql.DefaultSimpleStatement@1df868f0]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.367[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE email=? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@4275e105
[0;39mSpring Kotlin Cassandra > [35m14:59:18.367[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: ]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mExecuting prepared statement [SELECT * FROM users WHERE email=? ALLOW FILTERING]
[0;39mSpring Kotlin Cassandra > [35m14:59:18.374[0;39m [34m[http-nio-8081-exec-2][0;39m INFO  [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mc.g.s.s.s.CustomAuthenticationManager[0;39m - [34mAuthentication is set to SecurityContext for anil1
[0;39mSpring Kotlin Cassandra > [35m14:59:23.622[0;39m [39m[http-nio-8081-exec-2][0;39m DEBUG [userId: 2cb9374e-4e52-4142-a1af-16144ef4a27d]  [36mo.s.d.cassandra.core.cql.CqlTemplate[0;39m - [34mPreparing statement [SELECT * FROM users WHERE name LIKE ? ALLOW FILTERING] using org.springframework.data.cassandra.core.CassandraTemplate$PreparedStatementHandler@621c4be6
[0;39m